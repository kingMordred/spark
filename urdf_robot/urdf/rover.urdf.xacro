<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="urdf_robot">
  
  <xacro:macro name="inertial_sphere" params="mass radius *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}" />
      <inertia ixx="${(2/5) * mass * (radius*radius)}" ixy="0.0" ixz="0.0"
              iyy="${(2/5) * mass * (radius*radius)}" iyz="0.0"
              izz="${(2/5) * mass * (radius*radius)}" />
    </inertial>
  </xacro:macro>  


  <xacro:macro name="inertial_box" params="mass x y z *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}" />
      <inertia ixx="${(1/12) * mass * (y*y+z*z)}" ixy="0.0" ixz="0.0"
              iyy="${(1/12) * mass * (x*x+z*z)}" iyz="0.0"
              izz="${(1/12) * mass * (x*x+y*y)}" />
    </inertial>
  </xacro:macro>


  <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}" />
      <inertia ixx="${(1/12) * mass * (3*radius*radius + length*length)}" ixy="0.0" ixz="0.0"
              iyy="${(1/12) * mass * (3*radius*radius + length*length)}" iyz="0.0"
              izz="${(1/2) * mass * (radius*radius)}" />
    </inertial>
  </xacro:macro>

  <link name="base_footprint">
    
  </link>

  <material name="grey">
    <color rgba="0.8 0.8 0.8 0.8"/>
  </material>
  <material name="black">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>

  <link name="base_link">
    <visual>
      <origin xyz="0.0 0.0 0.0" />
      <geometry>
        <box size="0.5 0.43 0.02"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.5 0.43 0.02"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="20" x="0.5" y="0.43" z="0.02">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </xacro:inertial_box>
  </link>

  <link name="torso">
    <visual>
      <geometry>
        <cylinder length="0.8" radius="0.03"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.8" radius="0.03"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.001" length="0.8" radius="0.03">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </xacro:inertial_cylinder>
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="-0.1 0.0 0.0" rpy="0.0 0.0 0.0"/>
  </joint>
  

  <joint name="base_to_torso" type="fixed">
    <parent link="base_link"/>
    <child link="torso"/>
    <origin xyz="0.0 0.0 0.4"/>
  </joint>

  <!--front right wheel-->
  <link name="wheel_frontr_link">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.2" length="0.03" radius="0.07">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </xacro:inertial_cylinder>
  </link>

  <joint name="joint_frontr_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_frontr_link"/>
    <axis xyz="0 0 1"/>
    <!--limit lower="-3.14159" upper="3.14159" velocity="50.0" effort="1000.0"/-->
    <origin xyz="0.13 0.215 0" rpy="-1.57 0 0"/>
  </joint>
  

  <!--front left wheel-->

  <link name="wheel_frontl_link">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.2" length="0.03" radius="0.07">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </xacro:inertial_cylinder>
  </link>

  <joint name="joint_frontl" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_frontl_link"/>
    <axis xyz="0 0 1"/>
    <!--limit lower="-3.14159" upper="3.14159" velocity="50.0" effort="1000.0"/-->
    <origin xyz="0.13 -0.215 0" rpy="-1.57 0 0"/>
  </joint>

  <!--CASTER WHEEL-->

  <joint name="caster_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="-0.17 0.0 0.0"/>
  </joint>

  <link name="caster_wheel">
    <visual>
      <geometry>
        <sphere radius="0.07"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.07"/>
      </geometry>
    </collision>
    <xacro:inertial_sphere mass="0.3" radius="0.07">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </xacro:inertial_sphere>
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="torso">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="wheel_frontr_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="wheel_frontl_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="caster_wheel">
    <material>Gazebo/Black</material>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </gazebo>

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
      <updateRate>10</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>joint_frontl</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>joint_frontr_wheel</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>0.43</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.14</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>28</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>turtle1/cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
    </plugin>
  </gazebo>
  
  
  

</robot>  